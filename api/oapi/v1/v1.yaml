openapi: 3.0.3
info:
  title: buttons-api
  description: buttons api
  contact:
    email: dydwls121200@gmail.com
  version: 0.0.1
externalDocs:
  description: buttons api
  url: https://github.com/sundaytycoon/buttons-api
servers:
  - url: http://localhost:40081/api/v1
    description: local server

tags:
  - name: auth
    description: 사용자 인증

components:
  schemas:
    word:
      type: object
      description: a Keyword
      required:
        - id
        - created_at
        - created_by
        - updated_at
        - updated_by
        - status
        - name
      properties:
        id:
          description: The unique identifer of the livestream.
          type: integer
          format: int64
          readOnly: true
          example: 1
        created_at:
          description: The time the livestream was created.
          type: string
          readOnly: true
          example: '2021-09-26T02:17:58Z'
        created_by:
          description: The time the livestream was created.
          type: string
          readOnly: true
          example: 'someone@daangn.com'
        updated_at:
          description: The time the livestream was created.
          type: string
          readOnly: true
          example: '2021-09-26T02:17:58Z'
        updated_by:
          description: The time the livestream was created.
          type: string
          readOnly: true
          example: 'someone@daangn.com'
        status:
          description: pure string
          type: string
          readOnly: true
          example: ACTIVE
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
        name:
          description: pure string
          type: string
          readOnly: true
          example: '김치'

  parameters:
    query_web_auth_provider:
      in: query
      name: provider
      description: to provider for auth
      required: true
      schema:
        type: string

    query_web_auth_service:
      in: query
      name: service
      description: from service to auth
      required: true
      schema:
        type: string

    web_auth_provider:
      name: provider
      in: path
      required: true
      description: provider of auth
      schema:
        type: string
        example: "google"

paths:
  /auth/web/callback/{provider}:
    get:
      tags:
        - auth
      summary: callback for provider(google, kakao)
      description: callback for provider(google, kakao)
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
            example: 'google'
      responses:
        '200':
          description: hello
          content:
            application/json:
              schema:
                type: string

  /auth/web/redirect/{provider}:
    get:
      tags:
        - auth
      summary: get redirect url from proivder
      description: get redirect url from proivder
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
            example: 'google'
      responses:
        '302':
          description: redirect to `redirect_url`
          headers:
            Location:
              schema:
                type: string

#
#    post:
#      tags:
#        - banned_keyword_types
#      summary: add stopword
#      description: banned_keyword 를 추가합니다.
#      parameters:
##        - $ref: '#/components/parameters/header_audit_actor'
#        - $ref: '#/components/parameters/header_audit_action'
#        - $ref: '#/components/parameters/header_audit_resource'
##        - $ref: '#/components/parameters/header_audit_resource_id'
#      requestBody:
#        description: created banned_keyword row
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/banned_keyword_type'
#      responses:
#        '201':
#          description: 성공적으로 만들어졌습니다.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/banned_keyword_type'
#
#  /banned_keyword_types/list:
#    get:
#      tags:
#        - banned_keyword_types
#      summary: get banned keywords
#      description: 등록했던 banned_keyword를 가져옵니다
#      parameters:
#        - $ref: '#/components/parameters/query_pagination_offset'
#        - $ref: '#/components/parameters/query_pagination_size'
#        - $ref: '#/components/parameters/query_pagination_status'
#        - $ref: '#/components/parameters/query_pagination_q'
#      responses:
#        '200':
#          description: 성공적으로 데이터를 가져옵니다
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  list:
#                    type: array
#                    items:
#                      $ref: '#/components/schemas/banned_keyword_type'
#                  count:
#                    type: integer
#                    default: 2
#                    example: 2
#
#  /banned_keyword_types/{banned_keyword_type_id}:
#    get:
#      tags:
#        - banned_keyword_types
#      summary: banned_keyword의 row를 id대로 단 하나만 가져옵니다.
#      description: banned_keyword의 row를 id대로 단 하나만 가져옵니다.
#      parameters:
#        - $ref: '#/components/parameters/banned_keyword_type_id'
#      responses:
#        '200':
#          description: 성공적으로 데이터를 가져옵니다
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/banned_keyword_type'
#
#    patch:
#      tags:
#        - banned_keyword_types
#      summary: banned_keyword 의 row를 수정합니다.
#      description: 보통 memo/status값의 수정에만 사용될 예정입니다.
#      parameters:
#        - $ref: '#/components/parameters/banned_keyword_type_id'
##        - $ref: '#/components/parameters/header_audit_actor'
#        - $ref: '#/components/parameters/header_audit_action'
#        - $ref: '#/components/parameters/header_audit_resource'
##        - $ref: '#/components/parameters/header_audit_resource_id'
#      requestBody:
#        description: Updated banned_keyword's properties
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/banned_keyword_type'
#      responses:
#        '200':
#          description: 성공적으로 데이터를 가져옵니다
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/banned_keyword_type'
#
#  /banned_keywords:
#    post:
#      tags:
#        - banned_keyword
#      summary: banned_keyword에 type에 대한 단어를 등록합니다.
#      description: banned_keyword에 type에 대한 단어를 등록합니다.
#      parameters:
#        - $ref: '#/components/parameters/header_audit_actor'
#        - $ref: '#/components/parameters/header_audit_action'
#        - $ref: '#/components/parameters/header_audit_resource'
#        - $ref: '#/components/parameters/header_audit_resource_id'
#      requestBody:
#        description: banned_keyword에 등록할 단어를 입력합니다
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/banned_keyword'
#      responses:
#        '200':
#          description: 성공적으로 데이터를 가져옵니다
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/banned_keyword'
#
#  /banned_keywords/list:
#    get:
#      tags:
#        - banned_keyword
#      summary: banned_keyword에 대한 단어목록들을 가져옵니다.
#      description: banned_keyword에 대한 단어목록들을 가져옵니다.
#      parameters:
#        - $ref: '#/components/parameters/query_filter_banned_keyword_type_id'
#        - $ref: '#/components/parameters/query_pagination_size'
#        - $ref: '#/components/parameters/query_pagination_offset'
#        - $ref: '#/components/parameters/query_sort_name'
#        - $ref: '#/components/parameters/query_sort_created_at'
#      responses:
#        '200':
#          description: 성공적으로 데이터를 가져옵니다
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  list:
#                    type: array
#                    items:
#                      $ref: '#/components/schemas/banned_keyword'
#                  count:
#                    type: integer
#                    default: 2
#                    example: 2
##  /banned_keywords/ALL:
##    get:
##      tags:
##        - ALL_금지어
##      summary: 금지어에 한하여, 전체 공통으로 제어할 수 있는 금지어를 제어할 수 있도록 하는 기능입니다.
##      description: 금지어에 한하여, 전체 공통으로 제어할 수 있는 금지어를 제어할 수 있도록 하는 기능입니다.
##      responses:
##        '200':
##          description: 성공적으로 데이터를 가져옵니다
##          content:
##            application/json:
##              schema:
##                type: object
##                properties:
##                  list:
##                    type: array
##                    items:
##                      $ref: '#/components/schemas/word'
##                  count:
##                    type: integer
##                    default: 2
##                    example: 2
##    post:
##      tags:
##        - banned_keyword
##      summary: 금지어에 한하여, 전체 공통으로 제어할 수 있는 금지어를 제어할 수 있도록 하는 기능입니다.
##      description: 금지어에 한하여, 전체 공통으로 제어할 수 있는 금지어를 제어할 수 있도록 하는 기능입니다.
##      requestBody:
##        description: Updated banned_keyword's properties
##        required: true
##        content:
##          application/json:
##            schema:
##              type: object
##              properties:
##                list:
##                  type: array
##                  items:
##                    type: string
##      responses:
##        '200':
##          description: 성공적으로 데이터를 가져옵니다
##          content:
##            application/json:
##              schema:
##                type: object
##                properties:
##                  list:
##                    type: array
##                    items:
##                      $ref: '#/components/schemas/word'
##                  count:
##                    type: integer
##                    default: 2
##                    example: 2
#
#  /banned_keywords/bulk:
#    post:
#      tags:
#        - banned_keyword
#      summary: banned_keyword에 단어 여러개를 동시에 넣습니다.
#      description: banned_keyword에 단어 여러개를 동시에 넣습니다.
#      parameters:
##        - $ref: '#/components/parameters/header_audit_actor'
#        - $ref: '#/components/parameters/header_audit_action'
#        - $ref: '#/components/parameters/header_audit_resource'
##        - $ref: '#/components/parameters/header_audit_resource_id'
#
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              type: object
#              properties:
#                list:
#                  type: array
#                  items:
#                    $ref: '#/components/schemas/banned_keyword'
#      responses:
#        '200':
#          description: 성공적으로 데이터를 가져옵니다
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  list:
#                    type: array
#                    items:
#                      $ref: '#/components/schemas/banned_keyword'
#                  count:
#                    type: integer
#                    default: 2
#                    example: 2
#    patch:
#      tags:
#        - banned_keyword
#      summary: banned_keyword에 단어 여러개를 동시에 삭제합니다.
#      description: banned_keyword에 단어 여러개를 동시에 삭제합니다.
#      parameters:
##        - $ref: '#/components/parameters/header_audit_actor'
#        - $ref: '#/components/parameters/header_audit_action'
#        - $ref: '#/components/parameters/header_audit_resource'
##        - $ref: '#/components/parameters/header_audit_resource_id'
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              type: object
#              properties:
#                ids:
#                  type: array
#                  items:
#                    type: integer
#                    format: int64
#      responses:
#        '200':
#          description: 성공적으로 데이터를 가져옵니다
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  words:
#                    type: array
#                    items:
#                      type: string
#
#  /banned_keywords/bulk_if_not_exist:
#    post:
#      tags:
#        - banned_keyword
#      summary: banned_keyword에 단어 여러개를 동시에 넣습니다.
#      description: banned_keyword에 단어 여러개를 동시에 넣습니다. 이미 넣어져있는 단어라면 /banned_keywords/bulk 와는 다르게 에러로 뱉지 않고 계속해서 추가 생성 합니다.
#      parameters:
#        #        - $ref: '#/components/parameters/header_audit_actor'
#        - $ref: '#/components/parameters/header_audit_action'
#        - $ref: '#/components/parameters/header_audit_resource'
#      #        - $ref: '#/components/parameters/header_audit_resource_id'
#
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              type: object
#              properties:
#                list:
#                  type: array
#                  items:
#                    $ref: '#/components/schemas/banned_keyword'
#      responses:
#        '200':
#          description: 성공적으로 데이터를 가져옵니다
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  list:
#                    type: array
#                    items:
#                      $ref: '#/components/schemas/banned_keyword'
#                  count:
#                    type: integer
#                    default: 2
#                    example: 2
#
#  /banned_keywords/{banned_keyword_id}:
#    get:
#      tags:
#        - banned_keyword
#      summary: 금지어로 등록된 단어 하나를 가져옵니다.
#      description: 금지어로 등록된 단어 하나를 가져옵니다.
#      parameters:
#        - $ref: '#/components/parameters/banned_keyword_id'
#      responses:
#        '200':
#          description: 성공적으로 데이터를 가져옵니다
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/banned_keyword'
#
#    delete:
#      tags:
#        - banned_keyword
#      summary: typeBannedKeyword에 대한 수정을 합니다
#      description: 수정 및 삭제 정도만 있을거 같음.
#      parameters:
##        - $ref: '#/components/parameters/header_audit_actor'
#        - $ref: '#/components/parameters/header_audit_action'
#        - $ref: '#/components/parameters/header_audit_resource'
##        - $ref: '#/components/parameters/header_audit_resource_id'
#        - $ref: '#/components/parameters/banned_keyword_id'
#      responses:
#        '204':
#          description: 성공적으로 데이터를 가져옵니다
#
#  /cached/banned_keywords/type/{banned_keyword_type_type}:
#    get:
#      tags:
#        - cached
#      summary: banned_keyword의 목록들을 type로 가져옵니다.
#      description: 보통 memo/status값의 수정에만 사용될 예정입니다.
#      parameters:
#        - $ref: '#/components/parameters/banned_keyword_type_type'
#        - $ref: '#/components/parameters/query_from'
#      responses:
#        '200':
#          description: 성공적으로 데이터를 가져옵니다
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  list:
#                    type: array
#                    items:
#                      type: string
#                  count:
#                    type: integer
#                    default: 2
#                    example: 2
#
