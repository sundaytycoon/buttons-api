// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package v1

//type PostBannedKeywordTypesResponse struct {
//	BannedKeywordType *BannedKeywordType `json:"banned_keyword_type"`
//}
//
//func (res *PostBannedKeywordTypesResponse) Render(w http.ResponseWriter, r *http.Request) error {
//	w.WriteHeader(StatusCreated)
//	w.Header().Set(HeaderContentType, MIMEApplicationJSONCharsetUTF8)
//
//	b, err := jsoniter.Marshal(res)
//	if err != nil {
//		return err
//	}
//	w.Write(b)
//	return nil
//}
//
//type GetBannedKeywordTypesListResponse struct {
//	List  []*BannedKeywordType `json:"list"`
//	Count int64                `json:"count"`
//}
//
//func (res *GetBannedKeywordTypesListResponse) Render(w http.ResponseWriter, r *http.Request) error {
//	w.WriteHeader(StatusOK)
//	w.Header().Set(HeaderContentType, MIMEApplicationJSONCharsetUTF8)
//
//	b, err := jsoniter.Marshal(res)
//	if err != nil {
//		return err
//	}
//	w.Write(b)
//
//	return nil
//}
//
//type PatchBannedKeywordTypesBannedKeywordTypeIdResponse struct {
//	BannedKeywordType *BannedKeywordType `json:"banned_keyword_type,omitempty"`
//}
//
//func (res *PatchBannedKeywordTypesBannedKeywordTypeIdResponse) Render(w http.ResponseWriter, r *http.Request) error {
//	w.WriteHeader(StatusOK)
//	w.Header().Set(HeaderContentType, MIMEApplicationJSONCharsetUTF8)
//
//	b, err := jsoniter.Marshal(res)
//	if err != nil {
//		return err
//	}
//	w.Write(b)
//	return nil
//}
//
//type PostBannedKeywordTypesBannedKeywordTypeIdResponse struct {
//	BannedKeyword *BannedKeyword `json:"banned_keyword,omitempty"`
//}
//
//func (res *PostBannedKeywordTypesBannedKeywordTypeIdResponse) Render(w http.ResponseWriter, r *http.Request) error {
//	w.WriteHeader(StatusOK)
//	w.Header().Set(HeaderContentType, MIMEApplicationJSONCharsetUTF8)
//
//	b, err := jsoniter.Marshal(res)
//	if err != nil {
//		return err
//	}
//	w.Write(b)
//	return nil
//}
//
//type GetBannedKeywordsTypeBannedKeywordTypeIdListResponse struct {
//	List  []*BannedKeyword `json:"list"`
//	Count int64            `json:"count"`
//}
//
//func (res *GetBannedKeywordsTypeBannedKeywordTypeIdListResponse) Render(w http.ResponseWriter, r *http.Request) error {
//	w.WriteHeader(StatusOK)
//	w.Header().Set(HeaderContentType, MIMEApplicationJSONCharsetUTF8)
//
//	b, err := jsoniter.Marshal(res)
//	if err != nil {
//		return err
//	}
//	w.Write(b)
//	return nil
//}
//
//type GetBannedKeywordsBannedKeywordIdResponse struct {
//	BannedKeyword *BannedKeyword `json:"banned_keyword,omitempty"`
//}
//
//func (res *GetBannedKeywordsBannedKeywordIdResponse) Render(w http.ResponseWriter, r *http.Request) error {
//	w.WriteHeader(StatusOK)
//	w.Header().Set(HeaderContentType, MIMEApplicationJSONCharsetUTF8)
//
//	b, err := jsoniter.Marshal(res)
//	if err != nil {
//		return err
//	}
//	w.Write(b)
//	return nil
//}
//
//type PostBannedKeywordsBulkResponse struct {
//	List  []*BannedKeyword `json:"list"`
//	Count int64            `json:"count"`
//}
//
//func (res *PostBannedKeywordsBulkResponse) Render(w http.ResponseWriter, r *http.Request) error {
//	w.WriteHeader(StatusOK)
//	w.Header().Set(HeaderContentType, MIMEApplicationJSONCharsetUTF8)
//
//	b, err := jsoniter.Marshal(res)
//	if err != nil {
//		return err
//	}
//	w.Write(b)
//	return nil
//}
//
//type GetBannedKeywordTypesResponse struct {
//	BannedKeywordType *BannedKeywordType `json:"banned_keyword_type"`
//}
//
//func (res *GetBannedKeywordTypesResponse) Render(w http.ResponseWriter, r *http.Request) error {
//	w.WriteHeader(StatusCreated)
//	w.Header().Set(HeaderContentType, MIMEApplicationJSONCharsetUTF8)
//
//	b, err := jsoniter.Marshal(res)
//	if err != nil {
//		return err
//	}
//	w.Write(b)
//	return nil
//}
//
//type PatchBannedKeywordsBulkResponse struct {
//	Words []string `json:"words"`
//}
//
//func (res *PatchBannedKeywordsBulkResponse) Render(w http.ResponseWriter, r *http.Request) error {
//	w.WriteHeader(StatusCreated)
//	w.Header().Set(HeaderContentType, MIMEApplicationJSONCharsetUTF8)
//
//	b, err := jsoniter.Marshal(res)
//	if err != nil {
//		return err
//	}
//	w.Write(b)
//	return nil
//}
//
//type PostBannedKeywordsBulkIfNotExistResponse struct {
//	List  []*BannedKeyword `json:"list"`
//	Count int64            `json:"count"`
//}
//
//func (res *PostBannedKeywordsBulkIfNotExistResponse) Render(w http.ResponseWriter, r *http.Request) error {
//	w.WriteHeader(StatusOK)
//	w.Header().Set(HeaderContentType, MIMEApplicationJSONCharsetUTF8)
//
//	b, err := jsoniter.Marshal(res)
//	if err != nil {
//		return err
//	}
//	w.Write(b)
//	return nil
//}
