syntax = "proto3";

package buttons.api.v1;

option go_package = "github.com/sundaytycoon/buttons-api/gen/go/proto/buttons/api/v1";
option java_multiple_files = true;
option java_outer_classname = "UserProto";
option java_package = "proto.buttons.api.v1";

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
  external_docs: {
    url: "https://github.com/sundaytycoon/buttons-api";
    description: "buttons-api gRPC-gateway repository";
  }
  schemes: HTTP;
};


service UserService {
  rpc Get(UserServiceGetRequest) returns (UserServiceGetResponse);
   rpc AddUser(AddUserRequest) returns (User) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/users
      post: "/api/v1/users"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Add a user"
      description: "Add a user to the server."
      tags: "Users"
    };
  }
  rpc ListUser(ListUserRequest) returns (stream User) {
    option (google.api.http) = {
      // Route to this method from GET requests to /api/v1/users
      get: "/api/v1/users"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List users"
      description: "List all users on the server."
      tags: "Users"
    };
  };
}

message User {
  string id = 1;
}
message AddUserRequest {
  User user = 1;
}

message AddUserResponse {
  User user = 1;
}

message ListUserRequest {
}

message ListUserResponse {
  repeated User list = 1;
  int64 count = 2;
}

message UserServiceGetRequest {
  string id   = 1; // the id of this message.
  string name = 2; // @exclude the name of this message
}

message UserServiceGetResponse {
  string id   = 1; // the id of this message.
  string name = 2; // @exclude the name of this message
}
